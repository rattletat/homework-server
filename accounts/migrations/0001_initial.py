# Generated by Django 3.0.5 on 2020-05-10 20:54

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.EmailValidator(code='invalid')])),
                ('email_verified', models.BooleanField(default=False)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('password', models.CharField(default='', editable=False, max_length=20)),
                ('identifier', models.IntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(99999999)])),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
